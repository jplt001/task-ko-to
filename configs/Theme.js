import { DefaultTheme } from "react-native-paper";

export const DarkTheme = {
    ...DefaultTheme,
    roundness: 2,
    dark: true,
    colors: {
        "primary": "rgb(84, 219, 199)",
        "onPrimary": "rgb(0, 55, 49)",
        "primaryContainer": "rgb(0, 80, 71)",
        "onPrimaryContainer": "rgb(117, 248, 227)",
        "secondary": "rgb(128, 217, 152)",
        "onSecondary": "rgb(0, 57, 26)",
        "secondaryContainer": "rgb(0, 82, 40)",
        "onSecondaryContainer": "rgb(155, 246, 178)",
        "tertiary": "rgb(77, 218, 217)",
        "onTertiary": "rgb(0, 55, 55)",
        "tertiaryContainer": "rgb(0, 80, 79)",
        "onTertiaryContainer": "rgb(111, 247, 245)",
        "error": "rgb(255, 180, 171)",
        "onError": "rgb(105, 0, 5)",
        "errorContainer": "rgb(147, 0, 10)",
        "onErrorContainer": "rgb(255, 180, 171)",
        "background": "rgb(25, 28, 27)",
        "onBackground": "rgb(224, 227, 225)",
        "surface": "rgb(25, 28, 27)",
        "onSurface": "rgb(224, 227, 225)",
        "surfaceVariant": "rgb(63, 73, 70)",
        "onSurfaceVariant": "rgb(190, 201, 197)",
        "outline": "rgb(137, 147, 144)",
        "outlineVariant": "rgb(63, 73, 70)",
        "shadow": "rgb(0, 0, 0)",
        "scrim": "rgb(0, 0, 0)",
        "inverseSurface": "rgb(224, 227, 225)",
        "inverseOnSurface": "rgb(45, 49, 48)",
        "inversePrimary": "rgb(0, 107, 95)",
        "elevation": {
            "level0": "transparent",
            "level1": "rgb(28, 38, 36)",
            "level2": "rgb(30, 43, 41)",
            "level3": "rgb(32, 49, 46)",
            "level4": "rgb(32, 51, 48)",
            "level5": "rgb(33, 55, 51)"
        },
        "surfaceDisabled": "rgba(224, 227, 225, 0.12)",
        "onSurfaceDisabled": "rgba(224, 227, 225, 0.38)",
        "backdrop": "rgba(41, 50, 48, 0.4)"
    },
};


export const LightTheme = {
    ...DefaultTheme,
    roundness: 2,
    colors: {
        "primary": "rgb(0, 107, 95)",
        "onPrimary": "rgb(255, 255, 255)",
        "primaryContainer": "rgb(117, 248, 227)",
        "onPrimaryContainer": "rgb(0, 32, 28)",
        "secondary": "rgb(1, 109, 56)",
        "onSecondary": "rgb(255, 255, 255)",
        "secondaryContainer": "rgb(155, 246, 178)",
        "onSecondaryContainer": "rgb(0, 33, 13)",
        "tertiary": "rgb(0, 106, 105)",
        "onTertiary": "rgb(255, 255, 255)",
        "tertiaryContainer": "rgb(111, 247, 245)",
        "onTertiaryContainer": "rgb(0, 32, 32)",
        "error": "rgb(186, 26, 26)",
        "onError": "rgb(255, 255, 255)",
        "errorContainer": "rgb(255, 218, 214)",
        "onErrorContainer": "rgb(65, 0, 2)",
        "background": "rgb(250, 253, 251)",
        "onBackground": "rgb(25, 28, 27)",
        "surface": "rgb(250, 253, 251)",
        "onSurface": "rgb(25, 28, 27)",
        "surfaceVariant": "rgb(218, 229, 225)",
        "onSurfaceVariant": "rgb(63, 73, 70)",
        "outline": "rgb(111, 121, 118)",
        "outlineVariant": "rgb(190, 201, 197)",
        "shadow": "rgb(0, 0, 0)",
        "scrim": "rgb(0, 0, 0)",
        "inverseSurface": "rgb(45, 49, 48)",
        "inverseOnSurface": "rgb(239, 241, 239)",
        "inversePrimary": "rgb(84, 219, 199)",
        "elevation": {
            "level0": "transparent",
            "level1": "rgb(238, 246, 243)",
            "level2": "rgb(230, 241, 239)",
            "level3": "rgb(223, 237, 234)",
            "level4": "rgb(220, 236, 232)",
            "level5": "rgb(215, 233, 229)"
        },
        "surfaceDisabled": "rgba(25, 28, 27, 0.12)",
        "onSurfaceDisabled": "rgba(25, 28, 27, 0.38)",
        "backdrop": "rgba(41, 50, 48, 0.4)"
    },
};